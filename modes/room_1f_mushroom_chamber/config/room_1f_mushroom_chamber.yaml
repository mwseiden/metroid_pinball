#config_version=5
mode:
  start_events: room_1f_continue, room_1f_enter
  stop_events: game_ending, ball_ending, metroid_base_ended, room_1a_enter, room_1e_enter, room_1g_enter, room_1r_enter, room_1f_exit
  priority: 300


shot_profiles:
  room_1f_pops:
    states:
      - name: stage_1
        show: fade_one_light
        show_tokens:
          color: green
      - name: stage_2
        show: blink_light
        show_tokens:
          color: red
      - name: stage_3
        show: blink_light
        show_tokens:
          color: green
      - name: stage_4
        show: blink_light
        show_tokens:
          color: blue
      - name: final_stage
        show: led_color
        show_tokens:
          color: white


shots:
  room_1f_exit_north_closed_shot:
    hit_events: left_orbit_hit
    profile: exit_door
    enable_events: room_1f_enable_north_missile_door
    disable_events: room_1f_disable_north_missile_door, room_1f_open_north_door, metroid_close_doors
    reset_events: room_1f_disable_north_missile_door, room_1f_open_north_door
    show_tokens:
      led: led_enter_left_orbit
      color: door_red
  room_1f_exit_north_shot:
    hit_events: left_orbit_hit
    profile: exit_door
    enable_events: room_1f_enable_north_door
    disable_events: room_1f_disable_north_door, metroid_close_doors
    reset_events: room_1f_disable_north_door
    show_tokens:
      led: led_enter_left_orbit
      color: door_blue
  room_1f_exit_west_shot:
    switch: s_left_passage
    profile: exit_door
    enable_events: metroid_open_doors
    disable_events: room_1f_exit_west_shot_hit, metroid_close_doors
    reset_events: room_1f_exit_west_shot_hit
    show_tokens:
      led: led_enter_secret_passage
      color: door_blue
  room_1f_exit_east_shot:
    switch: s_pit
    profile: exit_door
    enable_events: metroid_open_doors
    disable_events: room_1f_exit_east_shot_hit, metroid_close_doors
    reset_events: room_1f_exit_east_shot_hit
    show_tokens:
      led: led_pit
      color: door_blue
  room_1f_exit_south_shot:
    switch: s_scoop
    profile: exit_door
    enable_events: room_1f_enable_door
    disable_events: mode_room_1f_mushroom_chamber_started, room_1f_exit_south_shot_hit, metroid_close_doors
    reset_events: mode_room_1f_mushroom_chamber_started, room_1f_exit_south_shot_hit
    show_tokens:
      led: led_enter_scoop
      color: door_blue
  room_1f_pop_1_shot:
    switch: s_pop_1
    profile: room_1f_pops
    enable_events: mode_room_1f_mushroom_chamber_started
    disable_events: mode_room_1f_mushroom_chamber_ending
    reset_events: mode_room_1f_mushroom_chamber_started
    show_tokens:
      led: led_pop_2
  room_1f_pop_2_shot:
    switch: s_pop_2
    profile: room_1f_pops
    enable_events: mode_room_1f_mushroom_chamber_started
    disable_events: mode_room_1f_mushroom_chamber_ending
    reset_events: mode_room_1f_mushroom_chamber_started
    show_tokens:
      led: led_pop_3
  room_1f_pop_3_shot:
    switch: s_pop_3
    profile: room_1f_pops
    enable_events: mode_room_1f_mushroom_chamber_started
    disable_events: mode_room_1f_mushroom_chamber_ending
    reset_events: mode_room_1f_mushroom_chamber_started
    show_tokens:
      led: led_pop_1

slides:
  room_1f_mushroom_chamber_backglass_slide:
    widgets:
      - type: image
        image: room_1f_mushroom_chamber_backglass
    transition: fade
    transition_out: fade
  room_1f_mushroom_chamber_splash_slide:
    widgets:
      - type: image
        image: room_1f_mushroom_chamber_splash

slide_player:
  mode_room_1f_mushroom_chamber_started:
    room_1f_mushroom_chamber_backglass_slide:
      target: backglass
    room_1f_mushroom_chamber_splash_slide:
      target: dmd
      expire: 1.5s

show_player:
  mode_room_1f_mushroom_chamber_started:
    gi_solid_with_overhead:
      loops: -1
      show_tokens:
        color: '808080'
        color2: '808080'
  show_mode_status_report:
    room_1f_mushroom_chamber_status_report:
      loops: 0
  flipper_cradle_release:
    room_1f_mushroom_chamber_status_report:
      action: stop
  room_1f_score_stage_1:
    special_score_purple:
      loops: 0
  room_1f_score_stage_2:
    special_score_red:
      loops: 0
  room_1f_score_stage_3:
    special_score_green:
      loops: 0
  room_1f_score_stage_4:
    special_score_blue:
      loops: 0
  room_1f_score_final_stage:
    special_score_yellow:
      loops: 0

event_player:
  mode_room_1f_mushroom_chamber_started:
    cmd_backbox_show:
      show_type: two_tone
      min_cutoff: 7
      max_cutoff: 12
      color1: "080014"
      color2: "004000"
    drop_targets_continue:
    cmd_map_position:
      room: '1f'
      visit: True
    room_1f_enable_door:
    metroid_open_doors:
    cmd_play_map_music:
      music: music_crateria
  metroid_open_doors{current_player.door_1a_1f == 0}: room_1f_enable_north_missile_door, room_1f_disable_north_door
  metroid_open_doors{current_player.door_1a_1f == 1}: room_1f_enable_north_door, room_1f_disable_north_missile_door
  room_1f_exit_north_closed_shot_hit{current_player.missiles > 0}: room_1f_open_north_door
  room_1f_open_north_door: room_1f_exit_north_shot_hit
  room_1f_exit_north_shot_hit.1: drop_targets_save
  room_1f_exit_north_shot_hit.2: room_1a_enter
  room_1f_exit_west_shot_hit.1: drop_targets_save
  room_1f_exit_west_shot_hit.2: room_1e_enter
  room_1f_exit_east_shot_hit.1: drop_targets_save
  room_1f_exit_east_shot_hit.2: room_1g_enter
  room_1f_exit_south_shot_hit.1: drop_targets_save
  room_1f_exit_south_shot_hit.2: room_1r_enter
  room_1f_pop_1_shot_stage_1_hit: room_1f_score_stage_1
  room_1f_pop_2_shot_stage_1_hit: room_1f_score_stage_1
  room_1f_pop_3_shot_stage_1_hit: room_1f_score_stage_1
  room_1f_pop_1_shot_stage_2_hit: room_1f_score_stage_2
  room_1f_pop_2_shot_stage_2_hit: room_1f_score_stage_2
  room_1f_pop_3_shot_stage_2_hit: room_1f_score_stage_2
  room_1f_pop_1_shot_stage_3_hit: room_1f_score_stage_3
  room_1f_pop_2_shot_stage_3_hit: room_1f_score_stage_3
  room_1f_pop_3_shot_stage_3_hit: room_1f_score_stage_3
  room_1f_pop_1_shot_stage_4_hit: room_1f_score_stage_4
  room_1f_pop_2_shot_stage_4_hit: room_1f_score_stage_4
  room_1f_pop_3_shot_stage_4_hit: room_1f_score_stage_4
  room_1f_pop_1_shot_final_stage_hit: room_1f_score_final_stage
  room_1f_pop_2_shot_final_stage_hit: room_1f_score_final_stage
  room_1f_pop_3_shot_final_stage_hit: room_1f_score_final_stage

variable_player:
  mode_room_1f_mushroom_chamber_started:
    has_chosen_landing_site:
      int: 1
      action: set
    continue_room:
      string: 1f
      action: set
    crateria_landed:
      int: 1
      action: set
  room_1f_open_north_door:
    missiles: -1
    door_1a_1f:
      int: 1
      action: set
  room_1f_score_stage_1:
    score: (10000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
    room_special_score:
      int: (10000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
      action: set
  room_1f_score_stage_2:
    score: (25000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
    room_special_score:
      int: (25000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
      action: set
  room_1f_score_stage_3:
    score: (50000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
    room_special_score:
      int: (50000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
      action: set
  room_1f_score_stage_4:
    score: (75000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
    room_special_score:
      int: (75000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
      action: set
  room_1f_score_final_stage:
    score: (100000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
    room_special_score:
      int: (100000 + current_player.crateria_shot_bonus + (50000 * current_player.area_bonus_nw) + (50000 * current_player.area_bonus_ne)) * current_player.multiplier
      action: set
